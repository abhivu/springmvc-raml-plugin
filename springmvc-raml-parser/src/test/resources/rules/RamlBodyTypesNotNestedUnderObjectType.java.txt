-----------------------------------ResponseTypeBuilder.java-----------------------------------
import com.gen.test.model.Privileges;
import com.gen.test.model.ResponseType;

public class ResponseTypeBuilder {

    private Privileges privileges;

    public ResponseTypeBuilder withprivileges(Privileges privileges) {
        this.privileges = privileges;
        return this;
    }

    public ResponseType build() {
        ResponseType result = new ResponseType();
        result.setPrivileges(privileges);
        return result;
    }

}
-----------------------------------com.gen.test.model.AdsPrivileges.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum AdsPrivileges {

    NO_ADS("NO_ADS"),
    SHOW_ADS("SHOW_ADS");
    private final String value;
    private final static Map<String, AdsPrivileges> VALUE_CACHE = new HashMap<String, AdsPrivileges>();

    static {
        for (AdsPrivileges c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AdsPrivileges(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AdsPrivileges fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.model.ContentPrivileges.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum ContentPrivileges {

    PREMIUM_BLOCKED("PREMIUM_BLOCKED"),
    PREMIUM_GRANTED("PREMIUM_GRANTED");
    private final String value;
    private final static Map<String, ContentPrivileges> VALUE_CACHE = new HashMap<String, ContentPrivileges>();

    static {
        for (ContentPrivileges c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private ContentPrivileges(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static ContentPrivileges fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.model.CreateSampleUnitRequest.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class CreateSampleUnitRequest implements Serializable
{

    private String a;
    private Long b;

    /**
     * Creates a new CreateSampleUnitRequest.
     *
     */
    public CreateSampleUnitRequest() {
        super();
    }

    /**
     * Creates a new CreateSampleUnitRequest.
     *
     */
    public CreateSampleUnitRequest(String a, Long b) {
        super();
        this.a = a;
        this.b = b;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof CreateSampleUnitRequest) == false) {
            return false;
        }
        CreateSampleUnitRequest otherObject = ((CreateSampleUnitRequest) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the a.
     *
     * @return
     *     a
     */
    public String getA() {
        return a;
    }

    /**
     * Set the a.
     *
     * @param a
     *     the new a
     */
    public void setA(String a) {
        this.a = a;
    }

    /**
     * Returns the b.
     *
     * @return
     *     b
     */
    public Long getB() {
        return b;
    }

    /**
     * Set the b.
     *
     * @param b
     *     the new b
     */
    public void setB(Long b) {
        this.b = b;
    }

}
-----------------------------------com.gen.test.model.Privileges.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Privileges implements Serializable
{

    private ContentPrivileges contentPrivileges;
    private AdsPrivileges adsPrivileges;

    /**
     * Creates a new Privileges.
     *
     */
    public Privileges() {
        super();
    }

    /**
     * Creates a new Privileges.
     *
     */
    public Privileges(ContentPrivileges contentPrivileges, AdsPrivileges adsPrivileges) {
        super();
        this.contentPrivileges = contentPrivileges;
        this.adsPrivileges = adsPrivileges;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Privileges) == false) {
            return false;
        }
        Privileges otherObject = ((Privileges) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the contentPrivileges.
     *
     * @return
     *     contentPrivileges
     */
    public ContentPrivileges getContentPrivileges() {
        return contentPrivileges;
    }

    /**
     * Set the contentPrivileges.
     *
     * @param contentPrivileges
     *     the new contentPrivileges
     */
    public void setContentPrivileges(ContentPrivileges contentPrivileges) {
        this.contentPrivileges = contentPrivileges;
    }

    /**
     * Returns the adsPrivileges.
     *
     * @return
     *     adsPrivileges
     */
    public AdsPrivileges getAdsPrivileges() {
        return adsPrivileges;
    }

    /**
     * Set the adsPrivileges.
     *
     * @param adsPrivileges
     *     the new adsPrivileges
     */
    public void setAdsPrivileges(AdsPrivileges adsPrivileges) {
        this.adsPrivileges = adsPrivileges;
    }

}
-----------------------------------com.gen.test.model.ResponseType.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class ResponseType implements Serializable
{

    /**
     * privileges for the user
     *
     */
    private Privileges privileges;

    /**
     * Creates a new ResponseType.
     *
     */
    public ResponseType() {
        super();
    }

    /**
     * Creates a new ResponseType.
     *
     */
    public ResponseType(Privileges privileges) {
        super();
        this.privileges = privileges;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof ResponseType) == false) {
            return false;
        }
        ResponseType otherObject = ((ResponseType) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the privileges.
     *
     * @return
     *     privileges
     */
    public Privileges getPrivileges() {
        return privileges;
    }

    /**
     * Set the privileges.
     *
     * @param privileges
     *     the new privileges
     */
    public void setPrivileges(Privileges privileges) {
        this.privileges = privileges;
    }

}
-----------------------------------com.gen.test.SampleUnitController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.CreateSampleUnitRequest;
import com.gen.test.model.ResponseType;
import org.springframework.http.ResponseEntity;


/**
 * A collection of samples
 * (Generated with springmvc-raml-parser v.0.10.8.6-SNAPSHOT)
 *
 */
public interface SampleUnitController {


    /**
     * Creates a sample unit
     *
     */
    public ResponseEntity<ResponseType> createSampleUnit(CreateSampleUnitRequest createSampleUnitRequest)
        throws Exception
    ;

}
-----------------------------------com.gen.test.SampleUnitControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.CreateSampleUnitRequest;
import com.gen.test.model.ResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * A collection of samples
 * (Generated with springmvc-raml-parser v.0.10.8.6-SNAPSHOT)
 *
 */
@RestController
@RequestMapping(value = "/api/sample_units", produces = "application/json")
@Validated
public class SampleUnitControllerDecorator {

    @Autowired
    private SampleUnitController sampleUnitControllerDelegate;

    /**
     * Creates a sample unit
     *
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<ResponseType> createSampleUnit(
        @Valid
        @RequestBody
        CreateSampleUnitRequest createSampleUnitRequest)
        throws Exception
    {
        return this.sampleUnitControllerDelegate.createSampleUnit(createSampleUnitRequest);
    }

}
